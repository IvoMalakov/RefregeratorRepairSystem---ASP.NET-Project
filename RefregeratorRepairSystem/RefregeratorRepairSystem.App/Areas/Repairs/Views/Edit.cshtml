@using RefregeratorRepairSystem.Models.ViewModels.Repairs
@model EditRepairViewModel

@{
    ViewBag.Title = "Edit";
}

<h1>Редактирай съществуващ ремонт</h1>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <label for="Employee" class="col-form-label">EmployeeInCharge: </label>
    <select class="form-control" name="EmployeeId" id="Employee">
        @{
            foreach (var employee in Model.Employees)
            {
                <option value="@employee.Id">@employee.Name</option>
            }
        }
    </select>

    @Html.LabelFor(r => r.ActionsTaken)
    @Html.EditorFor(r => r.ActionsTaken, new { htmlAttribute = new { @class = "form-control", @name = "ActionsTaken" } })
    @Html.ValidationMessageFor(r => r.ActionsTaken, "Your description must be at least 3 symbols long", new {@class = "red"})

    @Html.LabelFor(r => r.Price)
    @Html.EditorFor(r => r.Price, new { htmlAttribute = new { @class = "form-control", @name = "Price" } })
    @Html.ValidationMessageFor(r => r.Price, "Your price needs to be a positve number", new { @class = "red" })

    <div>
        <input type="submit" class="btn btn-danger button3" value="Редактирай този ремонт"/>
        @Html.ActionLink("Върни се на страницата с ремонтите", "AllRepairs", "Repairs", null, new { @class = "btn btn-success button3" })
    </div>

}